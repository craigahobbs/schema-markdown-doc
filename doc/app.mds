# Licensed under the MIT License
# https://github.com/craigahobbs/schema-markdown-js/blob/main/LICENSE


#
# The Schema Markdown documentation viewer
#


#
# url - The Schema Markdown text or JSON resource URL
# title - The schema title
#
async function schemaMarkdownDoc(url, title)
    # URL override?
    url = if(vURL != null, vURL, url)
    title = if(title != null && vURL == null, title, url)

    # If no URL was provided, use the Schema Markdown type model schema
    if url == null then
        types = schemaTypeModel()
    else then
        # Fetch the Schema Markdown resource
        if stringEndsWith(url, '.json') then
            schemaJSON = fetch(url)
            if schemaJSON != null then
                types = schemaValidateTypeModel(schemaJSON)
            endif
        else then
            schemaText = fetch(url, null, true)
            if schemaText != null then
                types = schemaParse(schemaText)
            endif
        endif

        # Error?
        if types == null then
            markdownPrint('**Error:** Failed to fetch Schema Markdown resource "' + url + '"')
            return
        endif
    endif

    # Render the page
    if vName != null then
        typePage(types, title, vName)
    else then
        indexPage(types, title)
    endif
endfunction


function indexPage(types, title)
    # Set the page title
    setDocumentTitle(title)
    markdownPrint('# ' + title)

    # Group the types
    groups = objectNew()
    typeNames = arraySort(objectKeys(types))
    uncategorizedTypeGroups = objectNew('action', 'Actions', 'enum', 'Enums', 'struct', 'Structs', 'typedef', 'Typedefs')
    foreach typeName in typeNames do
        type = objectGet(types, typeName)
        group = objectGet(objectGet(type, arrayGet(objectKeys(type), 0)), 'docGroup')
        if group == null then
            group = objectGet(uncategorizedTypeGroups, arrayGet(objectKeys(type), 0))
        endif
        if !objectHas(groups, group) then
            objectSet(groups, group, arrayNew())
        endif
        arrayPush(objectGet(groups, group), type)
    endforeach

    # Render the index groups
    groupNames = arraySort(objectKeys(groups))
    foreach groupName in groupNames do
        markdownPrint('', '## ' + markdownEscape(groupName))

        # Render the group type links
        groupTypes = objectGet(groups, groupName)
        foreach groupType in groupTypes do
            groupTypeName = objectGet(objectGet(groupType, arrayGet(objectKeys(groupType), 0)), 'name')
            groupTypeURL = '#' + if(vURL != null, "var.vURL='" + vURL + "'&", '') + "var.vName='" + groupTypeName + "'"
            markdownPrint('', '[' + groupTypeName + '](' + groupTypeURL + ')')
        endforeach
    endforeach
endfunction


function typePage(types, title, typeName)
    # Set the page title
    setDocumentTitle(title + ' - ' + typeName)
    markdownPrint('[Index](' + if(vURL != null, "#var.vURL='" + vURL + "')", '#var=)'))

    # Type exist?
    if !objectHas(types, typeName) then
        markdownPrint('', '**Error:** Unknown type "' + typeName + '"')
        return
    endif

    # Render the type's documentation
    elementModelRender(schemaElements(types, typeName))
endfunction
